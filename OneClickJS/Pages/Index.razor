@page "/"
@using Microsoft.AspNetCore.Mvc.Rendering
@using OneClickJS.Data.Models
@using OneClickJS.Data
@inject HttpClient http
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Mvc;
@using System.Threading.Tasks;
@using System.Linq;

<div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">
    <div class="carousel-indicators">
        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>
        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>
    </div>
    <div class="carousel-inner">
        <div class="carousel-item active">
            <img src="img/carouselWelcome.gif" class="d-block w-100" alt="slide de bienvenida">
            <div class="carousel-caption d-none d-md-block ">
            </div>
        </div>
        <div class="carousel-item">
            <img src="img/slideSecundario.jpeg" class="d-block w-100 imgcustom " alt="segundo slide">
            <div class="carousel-caption d-none d-md-block">
                <p class="slogans">La manera más fácil de obtener un empleo</p>
            </div>
        </div>
        <div class="carousel-item">
            <img src="img/slideTerciario.jpeg" class="d-block w-100" alt="tercer slide">
            <div class="carousel-caption d-none d-md-block">
                <p class="slogans">Las personas son importantes para todas las empresas</p>
            </div>
        </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>


<br />


<center><h2>Empleos registrados</h2></center>
<br />
<div class="container">
    @if (empleos == null)
    {
        <p><em>Cargando...</em></p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3">
            @foreach (var empleo in empleos)
            {
                <center>
                    <div class="col">
                        <div class="card item" style="max-width: 21rem">
                            <div class="card-header justify-content-center">
                                <div class="col-auto justify-content-center">
                                    <span class="badge tipo">@empleo.ObtenerNameCat(categorias)</span>

                                </div>
                            </div>
                            <img src="img/empleos/@empleo.FotoEmpleo" class="card-img-top" alt="...">
                            <div class="card-body">
                                <h5 class="card-title">@empleo.NombreEmpleo</h5>
                                <p class="card-text">@empleo.DescripcionEmpleo</p>
                                <div class="row justify-content-center">
                                    <div class="col">
                                        <span class="badge vacantes span2">Vacantes</span>
                                    </div>
                                    <div class="col">
                                        <span class="badge sueldo span2">Sueldo</span>
                                    </div>
                                    <div class="col">
                                        <span class="badge tipo2 span2">Tipo</span>
                                    </div>
                                </div>
                                <div class="row justify-content-center">
                                    <div class="col">
                                        @empleo.VacantesEmpleo
                                    </div>
                                    <div class="col">
                                        @empleo.SueldoEmpleo
                                    </div>
                                    <div class="col">
                                        @empleo.TipoEmpleo
                                    </div>
                                </div>
                                <!--<a href="#" class="btn btn-primary">Detalles</a>-->
                    </div>
                            <div class="card-footer justify-content-center">
                                <span class="badge span2" style="background-color:black">@empleo.ObtenerNameEmpr(empresas)</span>
                            </div>
                        </div>
                    </div>
                </center>

            }

        </div>
    }
    <br />
    <center>
        <a class="btn btn-primary btnCurv" title="Ver más" href="/login">Ver más <i class="oi oi-arrow-right"></i></a>
    </center>

</div>




@code {
    private readonly string api = "api/Empleo/GetEmpleos2";
    private IList<Empleo> empleos;

    private readonly string api2 = "api/Categoria/";
    private IList<Categoria> categorias;

    private readonly string api3 = "api/Empresa/";
    private IList<Empresa> empresas;

    private string nombreEmpleoFiltro = string.Empty;
    private int paginaActual = 1;
    private int paginasTotales;

    private Usuario usuario = new Usuario();
    protected override async Task OnInitializedAsync()
    {
        await CargarEmpleos();

    }


    async Task CargarEmpleos(int pagina = 1, int cantidadRegistrosAmostrar = 6)
    {
        var httpResponse = await http.GetAsync($"{api}?pagina={pagina}&CantidadAMostrar={cantidadRegistrosAmostrar}&nombre={nombreEmpleoFiltro}");

        if (httpResponse.IsSuccessStatusCode)
        {
            paginasTotales = int.Parse(httpResponse.Headers.GetValues("totalPaginas").FirstOrDefault());
            var responsesString = await httpResponse.Content.ReadAsStringAsync();
            var responseCat = await http.GetFromJsonAsync<IList<Categoria>>(api2);
            var responseEmpresa = await http.GetFromJsonAsync<IList<Empresa>>(api3);
            empresas = responseEmpresa;
            categorias = responseCat;
            empleos = JsonSerializer.Deserialize<IList<Empleo>>(responsesString,
                new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
        }
        else
        {
            Console.WriteLine("error");
        }
        //empleos = await http.GetFromJsonAsync<IList<Empleo>>(api);
    }
}

