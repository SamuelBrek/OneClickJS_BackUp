@page "/usuarios/add"
@page "/usuarios/update/{id:int}"

@using OneClickJS.Data.Models
@using OneClickJS.Data
@using System.Net.Http
@inject IJSRuntime JS
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using static OneClickJS.Helpers.IJSExtensions
@inject HttpClient http
@inject NavigationManager NavigationManager


<div class="container">
    <h1>@(isUpdate ? $"Editar Usuario con Id: {usuario.IdUsuario}" : "Agregar usuario")</h1>

    <EditForm Model="@usuario">
        <form class="container-border" @onsubmit="Save">
            <div class="mb-2">
                <label class="form-label" for="name">Nombre</label>
                <InputText class="form-control" @bind-Value="@usuario.NombreUsuario" id="name"></InputText>
            </div>
            <div class="mb-2">
                <label class="form-label" for="last-name">Apellido</label>
                <InputText class="form-control" @bind-Value="@usuario.ApellidoUsuario" id="last-name"></InputText>
            </div>
            @if (isUpdate == false)
            {
                <div class="mb-2">
                    <label class="form-label" for="correo">Correo</label>
                    <InputText class="form-control" @bind-Value="@usuario.CorreoUsuario" id="correo"></InputText>
                </div>
                <div class="mb-2">
                    <label class="form-label" for="password">Contraseña</label>
                    <InputText class="form-control" @bind-Value="@usuario.ContraseñaUsuario" id="password"></InputText>
                </div>
            }
            @if (isUpdate)
            {
                <div class="mb-2">
                    <label class="form-label" for="nivel">Nivel</label>
                    <InputText class="form-control" @bind-Value="@usuario.NivelUsuario" id="nivel" placeholder="Usuario">
                    </InputText>
                </div>
            }

            <button type="submit" class="btn btn-success">Guardar</button>
            <a class="btn btn-danger" @onclick="() => CancelarSubida()">Cancelar</a>
        </form>
    </EditForm>
</div>



@code {
    [Parameter]
    public int id { get; set; }
    public bool isUpdate { get; set; } = false;
    Usuario usuario = new Usuario();
    protected override async Task OnInitializedAsync()
    {
        isUpdate = id != 0;
        if (isUpdate)
        {
            var response = await http.GetFromJsonAsync<Usuario>($"api/Usuario/{id}");
            if (response != null)
            {
                usuario = response;
            }
        }
    }


    protected async Task CancelarSubida()
    {
        string mensaje = "¿Deseas cancelar el procedimiento?";
        if (await JS.Confirm("Cancelar", mensaje, TipoMensajeSweetAlert.warning))
        {
            NavigationManager.NavigateTo("/usuarios");
        }
    }
    protected async Task ConfirmarSubida()
    {
        await JS.SaveData("Procedimiento exitoso!", TipoMensajeSweetAlert.success);
    }

    protected async Task Save()
    {

        HttpResponseMessage response;
        if (isUpdate)
        {
            response = await http.PutAsJsonAsync<Usuario>($"api/Usuario/Update/{id}", usuario);
            if (response.IsSuccessStatusCode)
            {
                await ConfirmarSubida();
            }
        }
        else
        {
            usuario.NivelUsuario = "Usuario";
            response = await http.PostAsJsonAsync<Usuario>("api/Usuario/Create", usuario);
            if (response.IsSuccessStatusCode)
            {
                await ConfirmarSubida();
            }
        }
        Usuario saved = response.Content.ReadFromJsonAsync<Usuario>().Result;
        await Task.Delay(1500);
        NavigationManager.NavigateTo("/usuarios");
    }
}
